//#include<iostream>
//#include<vector>
//#include<queue>
//#include<algorithm>
//
//using namespace std;
//
//int n, m;
//int map[504][504];
//
//const char block[19][4][5]={
//	{
//		"1111",
//		"0000",
//		"0000",
//		"0000",
//	},
//	{
//		"1000",
//		"1000",
//		"1000",
//		"1000",
//	},
//	{
//		"1100",
//		"1100",
//		"0000",
//		"0000",
//	},
//	{
//		"1000",
//		"1000",
//		"1100",
//		"0000",
//	},
//	{
//		"1110",
//		"1000",
//		"0000",
//		"0000",
//	},
//	{
//		"1100",
//		"0100",
//		"0100",
//		"0000",
//	},
//	{
//		"0010",
//		"1110",
//		"0000",
//		"0000",
//	},
//	{
//		"0100",
//		"0100",
//		"1100",
//		"0000",
//	},
//	{
//		"1000",
//		"1110",
//		"0000",
//		"0000",
//	},
//	{
//		"1100",
//		"1000",
//		"1000",
//		"0000",
//	},
//	{
//		"1110",
//		"0010",
//		"0000",
//		"0000",
//	},
//	{
//		"1000",
//		"1100",
//		"0100",
//		"0000",
//	},
//	
//	{
//		"0110",
//		"1100",
//		"0000",
//		"0000",
//	},
//	{
//		"0100",
//		"1100",
//		"1000",
//		"0000",
//	},
//	{
//		"1100",
//		"0110",
//		"0000",
//		"0000",
//	},
//	{
//		"1110",
//		"0100",
//		"0000",
//		"0000",
//	},
//	{
//		"0100",
//		"1110",
//		"0000",
//		"0000",
//	}, 
//	{
//		"0100",
//		"1100",
//		"0100",
//		"0000", 
//	}, 
//	{	
//		"1000",
//		"1100",
//		"1000",
//		"0000",
//	}
//};
//
//int get_count(int sy, int sx, int k) {
//	int ret = 0;
//
//	for (int i = 0; i < 4; i++) {
//		for (int j = 0; j < 4; j++) {
//			ret += (block[k][i][j] - '0') * map[sy + i][sx + j];
//		}
//	}
//	return ret;
//
//}
//
//
//int main() {
//
//
//	cin >> n >> m;
//
//
//	for (int i = 1; i <= n; i++) {
//		for (int j = 1; j <= m; j++) {
//			cin >> map[i][j];
//		}
//	}
//
//	for (int i = n+1; i <= n + 3; i++) {
//		for (int j = 0; j <= m + 3; j++) {
//			map[i][j] = -10000;
//		}
//	}
//	for (int i = 0; i <= n + 3; i++) {
//		for (int j = m + 1; j <= m + 3; j++) {
//			map[i][j] = -10000;
//		}
//	}
//	int ret = 0;
//	for (int i = 1; i <= n; i++) {
//		for (int j = 1; j <= m; j++) {
//			for (int k = 0; k < 19; k++) {
//				int candi = get_count(i, j, k);
//				if (ret < candi) {
//					ret = candi;
//				}
//			}
//		}
//	}
//
//	printf("%d ", ret);
//	return 0;
//
//}